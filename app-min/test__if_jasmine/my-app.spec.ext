import Aurelia, { CustomElement } from 'aurelia';
import { MyApp } from '../src/my-app';

// @if babel
function createAu(template, ...deps) {
// @endif
// @if typescript
function createAu(template: string, ...deps: readonly unknown[]): Aurelia {
// @endif
  const wrapper = CustomElement.define({name: 'wrapper', template});
  document.body.appendChild(document.createElement('wrapper'));
  return Aurelia.register(deps).app(wrapper);
}

function cleanup() {
  const wrapper = document.querySelector('wrapper');
  if (wrapper) wrapper.remove();
}

describe('my-app', () => {
  afterEach(() => {
    cleanup();
  });

  it('should render message', async () => {
    const au = createAu('<my-app></my-app>', MyApp);
    await au.start().wait();
    const node = document.querySelector('my-app');
    // @if shadow-dom-open
    const text = node.shadowRoot.querySelector('.message').textContent;
    // @endif
    // @if shadow-dom-closed
    const text = CustomElement.behaviorFor(node).projector.shadowRoot.querySelector('.message').textContent;
    // @endif
    // @if !shadow-dom-open && !shadow-dom-closed
    const text =  node.querySelector('.message').textContent;
    // @endif
    expect(text.trim()).toBe('Hello World!');
    await au.stop().wait();
    cleanup();
  });
})

